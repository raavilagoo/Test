/* Write function

Scenario: ConstructedDatagram: The write method correctly generates a body from the paylaod and sequence given in the constructor
  GIVEN("A Datagram constructed with an empty paylaod buffer and sequence equal to 0")
  // assertions carried out in GIVEN:
  // The seq accessor method returns 0
  // The length accessor method returns 0
  // The payload buffer returned by the payload accessor method is empty

    WHEN("The sequence, length and the paylaod are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The payload returned by the payload accessor method remains unchanged")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section is empty")
      THEN("The output buffer is as expected '0x00 0x00' ")

  GIVEN("A Datagram constructed with a non-empty payload buffer and sequence equal to 0")
  // assertions carried out in GIVEN:
  // The seq accessor method returns 0
  // The value returned by the length accessor method is 5
  // The payload buffer returned by the payload accessor method is '0xb7 0xe1 0x8d 0xaa 0x4d'

    WHEN("The sequence, length and paylaod are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The payload returned by the paylaod accessor method remains unchanged")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0xb7 0xe1 0x8d 0xaa 0x4d'")
      THEN("The output buffer is as expected '0x00 0x05 0xb7 0xe1 0x8d 0xaa 0x4d' ")

    WHEN("The paylaod given to the constructor is altered ('0xb7 0xe1 0x8d 0xaa 0x4d 0x02') before write method is called")
      THEN("Before the write method is called, The value returned by the length accessor method remains unchanged after paylaod alteration, thus the value is inconsistent with the size of the altered paylaod")
      THEN("The write method reports ok status")
      THEN("After the write method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the length accessor method returns a value equal to the size of the altered payload")
      THEN("The paylaod returned by the paylaod accessor method is same as the altered paylaod buffer")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0xb7 0xe1 0x8d 0xaa 0x4d 0x02'")
      THEN("The output buffer is as expected '0x00 0x06 0x01 0x02 0x03 0x04 0x05 0x02' ")

  GIVEN("A Datagram constructed with a non-empty payload buffer of any length from 0 to 252 and sequence equal to 0")
  // assertions carried out in GIVEN:
  // The seq accessor method returns 0
  // The value returned by the length accessor method ranges from 0 to 252
  // The payload buffer returned by the payload accessor method has following properties:
  // - contains 0x09 value at each position of the buffer
  // - length of the paylaod buffer ranges from 0 to 252

    WHEN("The sequence, length and paylaod are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The payload returned by the paylaod accessor method remains unchanged")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0x09 ...' for varying payload lengths")
      THEN("The output buffer is as expected for all the different paylaod buffers")

  GIVEN("A Datagram constructed with a non-empty paylaod buffer and non-zero sequence")
  // assertions carried out in GIVEN:
  // The seq accessor method returns 10
  // The value returned by the length accessor method is 6
  // The payload buffer returned by the payload accessor method is '0xc2 0x22 0x10 0xa6 0x3a 0xa5'

    WHEN("The sequence, length and paylaod are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The payload returned by the paylaod accessor method remains unchanged")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0xc2 0x22 0x10 0xa6 0x3a 0xa5'")
      THEN("The output buffer is as expected '0x0a 0x06 0xc2 0x22 0x10 0xa6 0x3a 0xa5' ")

  GIVEN("A Datagram constructed with a non-empty paylaod buffer and a arbitrary sequence ranging from 0 to 0xff")
  // assertions carried out in GIVEN:
  // The value returned by the seq accessor method ranges from 0 to 0xff
  // The value returned by the length accessor method is 7
  // The payload buffer returned by the payload accessor method is '0x01 0x23 0x45 0x0a 0x4d 0x04 0x05'

    WHEN("The sequence, length and paylaod are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The payload returned by the paylaod accessor method remains unchanged")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0x01 0x23 0x45 0x0a 0x4d 0x04 0x05'")
      THEN("The output buffer is as expected '(0x00-0xff) 0x07 0x01 0x23 0x45 0x0a 0x4d 0x04 0x05' ")

/* Parse function

Scenario: The parse function correctly updates the datagram's length member and constructor's paylaod buffer and sequence from the input_buffer

  GIVEN("A Datagram constructed with an empty paylaod and sequence equal to 0")
  // assertions carried out in GIVEN:
  // The seq accessor method returns 0
  // The value returned by the length accessor method is 0
  // The payload buffer returned by the payload accessor method is empty

    WHEN("An empty input_buffer body is parsed")
      THEN("The parse method reports out of bounds status")
      THEN("After the parse method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The paylaod returned by the paylaod accessor method remains unchanged")
      THEN("The constructor's payload buffer remains unchanged")

    WHEN("A body with a complete 2-byte header, and a non-empty paylaod buffer consistent with the length field of the header is parsed")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor")
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")

  GIVEN("A Datagram constructed with a non-empty paylaod buffer and sequence equal to 0")
  // assertions carried out in GIVEN:
  // The seq accessor method returns 0
  // The value returned by the length accessor method is 5
  // The payload buffer returned by the payload accessor method is '0x7e 0x9b 0x20 0x1b 0xb9'

    WHEN("An empty input_buffer body is parsed")
      THEN("The parse method reports out of bounds status")
      THEN("After the parse method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The paylaod returned by the paylaod accessor method remains unchanged")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")      
      THEN("The constructor's payload buffer remains unchanged")

    WHEN("A body with an incomplete 2-byte header and an empty payload buffer is parsed")
      THEN("The parse method reports out of bounds status")
      THEN("After the parse method is called, The value returned by the seq accessor method remains unchanged")
      THEN("the value returned by the length accessor method remains unchanged")
      THEN("The paylaod returned by the paylaod accessor method remains unchanged")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")
      THEN("The constructor's payload buffer remains unchanged")
    
    WHEN("A body with a complete 2-byte header, and a non-empty paylaod buffer consistent with the length field of the header is parsed")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")

    WHEN("A body with a complete 2-byte header, and a non empty payload buffer consistent with the length field of the header, is altered after it's parsed")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the original input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the original input_buffer body's header")
      THEN("The payload buffer returned from the payload accessor method is equal to the original payload from the body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")
      THEN("After the input buffer is altered, The payload buffer returned from the payload accessor method is unchanged")

    WHEN("A body with a complete 2-byte header, and paylaod buffer as '0x00' consistent with the length field of the header is parsed")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")

    WHEN("The parse method is called on a body with a complete 2-byte header, and a non-empty payload buffer where the length field of the header is inconsistent with the actual length of the payload buffer")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is not equal to the size of the payload buffer in the input_buffer body")
      THEN("The payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")

    WHEN("The parse method is called on a body whose sequence field of the header has a different value than the sequence number given in the constructor of the datagram")
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the Datagram constructor") 
      THEN("the payload given in the Datagram constructor is independent of the input buffer body")


Scenario: Datagram correctly preserves data in roundtrip writing and parsing
  GIVEN("A datagram constructed with an non-empty payload buffer and a non-zero sequence number")
    WHEN("A body with seq, length and payload is generated, parsed into a new ParsedDatagram object, and generated again with a ConstructedDatagram object")
      // write
      THEN("The first write method reports ok status")
      THEN("After the first write method is called, The value returned by the seq accessor method is equal to 0")
      THEN("the length accessor method returns a value equal to the size of the payload given in the constructor")
      THEN("The paylaod returned by the paylaod accessor method is same as the paylaod buffer given in the constructor")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0x61 0x6a 0x1a 0x6a 0x29 0xcf 0x01 0x81 0xbe 0x9d'")
      THEN("The output buffer is as expected '0x01 0x0a 0x61 0x6a 0x1a 0x6a 0x29 0xcf 0x01 0x81 0xbe 0x9d'")

      // parse
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, The value returned by the seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload given in the ParsedDatagram constructor is independent of the input buffer body")

      // write
      THEN("The second write method reports ok status")
      THEN("After the second write method is called, The value returned by the seq accessor method is equal to 0")
      THEN("the length accessor method returns a value equal to the size of the payload given in the constructor")
      THEN("The paylaod returned by the paylaod accessor method is same as the paylaod buffer given in the constructor")
      THEN("The seq field of the body's header matches the value returned by the seq accessor method")
      THEN("The length field of the body's header matches the value returned by the length accessor method")
      THEN("The body's payload section correctly stores the paylaod as '0x61 0x6a 0x1a 0x6a 0x29 0xcf 0x01 0x81 0xbe 0x9d'")
      THEN("The output buffer is as expected '0x01 0x0a 0x61 0x6a 0x1a 0x6a 0x29 0xcf 0x01 0x81 0xbe 0x9d'")

/* Datagram Receiver

Scenario: Datagram Receiver correctly parses datagram bodies and performs consistency checking on them
  GIVEN("A Datagram receiver of buffer size 254 bytes and expected sequence number equal to 0, with output_datagram constructed with empty payload buffer")
  // assertions carried out in GIVEN:
  // The output_datagram's seq accessor method returns 0
  // The value returned by the output_datagram's length accessor method is 0
  // The payload buffer returned by the output_datagram's payload accessor method is empty

    WHEN("An empty input_buffer body is parsed")
      THEN("The transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method remains unchanged")
      THEN("the value returned by the output_datagram's length accessor method remains unchanged")
      THEN("the paylaod returned by the output_datagram's paylaod accessor method remains unchanged")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with an incomplete 2-byte header and an empty payload buffer is given to the receiver")
      THEN("The transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method remains unchanged")
      THEN("the value returned by the output_datagram's length accessor method remains unchanged")
      THEN("the paylaod returned by the output_datagram's paylaod accessor method remains unchanged")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("transform is called on a body with a complete 2-byte header, and a non-empty paylaod buffer inconsistent with the length field of the header")
      THEN("The transform method reports invalid length status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is inconsistent with the actual length of the payload buffer from the body")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")

    WHEN("transform is called on a body with a non-empty paylaod buffer and a complete 2-byte header where the sequence number of the header is different from the DatagramReceiver's expected sequence number")
      THEN("The transform method reports invalid sequence status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")

    WHEN("A body with a complete 2-byte header, a non-empty payload buffer consistent with the length field of the header is given to the receiver")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")

  GIVEN("A Datagram receiver of buffer size 254 bytes and expected sequence number equal to 0, with output_datagram constructed with a non-empty payload buffer")
  // assertions carried out in GIVEN:
  // The output_datagram's seq accessor method returns 0
  // The value returned by the output_datagram's length accessor method is 8
  // The payload buffer returned by the output_datagram's payload accessor method is '0x51 0xb0 0x6e 0xf7 0x86 0x71 0xcd 0x00'  

    WHEN("A body with an incomplete 2-byte header and an empty payload is given to the receiver")
      THEN("The transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method remains unchanged")
      THEN("the value returned by the output_datagram's length accessor method remains unchanged")
      THEN("the paylaod returned by the output_datagram's paylaod accessor method remains unchanged")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("transform is called on a body with a complete 2-byte header, and a non-empty paylaod buffer inconsistent with the length field of the header")
      THEN("The transform method reports invalid length status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is inconsistent with the actual length of the payload buffer from the body")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")

    WHEN("transform is called on a body with a non-empty paylaod buffer and a complete 2-byte header where the sequence field of the header does not match sequence given in output_datagram's constructor")
      THEN("The transform method reports invalid sequence status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")

    WHEN("A body with a complete 2-byte header, a non-empty payload buffer consistent with the length field of the header is given to the receiver")
      THEN("The transform method reports ok status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The value returned by the output_datagram's length accessor method is equal to the length field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The output_datagram's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_datagram's payload buffer is independent of the data in input_buffer")

Scenario: Datagram Receiver correctly reports incrementing, rollover, and resetting of expected sequence number

  GIVEN("A Datagram receiver of buffer size 254 bytes and expected sequence number equal to 0") {

    // Intent : we call transform multiple times until the final sequence number is 0xff
    WHEN("transform is called each time on parseable bodies as input_buffers, whose headers have sequence numbers incrementing from 0 to 255") 
      THEN("All of the transform methods report ok status")
      THEN("After the transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")
      THEN("The final sequence value returned by output_datagram's seq accessor method is 0xff")

  GIVEN("A Datagram receiver of buffer size 254 bytes and expected sequence number equal to 1")     
  // Setup:
  // transform called on an input_buffer where the header's seq field has value 0

  // assertions carried out in GIVEN:
  // The output_datagram's seq accessor method returns 0
  // The value returned by the output_datagram's length accessor method is 9
  // The payload buffer returned by the output_datagram's payload accessor method is '0x00 0x07 0x48 0x17 0xb8 0x67 0x1c 0x45 0x28'  

    WHEN("transform is called on two parseable datagram bodies as input_buffers, whose headers have sequence numbers as 1 & 2 respectively")
      THEN("The first transform method reports ok status")
      THEN("After the first transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The second transform method reports ok status")
      THEN("After the second transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

    WHEN("transform is called on two parseable datagram bodies as input_buffers, whose headers have sequence numbers as 2 & 3 respectively")
      THEN("The first transform method reports invalid_sequence status")
      THEN("After the first transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The second transform method reports ok status")
      THEN("After the second transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

    WHEN("transform is called on two parseable datagram bodies as input_buffers, whose headers have sequence numbers as 0xff & 0 respectively")
      THEN("The first transform method reports invalid_sequence status")
      THEN("After the first transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The second transform method reports ok status")
      THEN("After the second transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

    WHEN("transform is called on three parseable datagram bodies as input_buffers, whose headers have sequence numbers as 1, 10 & 11 respectively")
      THEN("The first transform method reports ok status")
      THEN("After the first transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The second transform method reports invalid_sequence status")
      THEN("After the second transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The third transform method reports ok status")
      THEN("After the third transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

  GIVEN("A Datagram receiver of buffer size 254 bytes and expected sequence number equal to 0xff")
  // Setup:
  // transform called on an input_buffer where the header's seq field has value 0xfe

  // assertions carried out in GIVEN:
  // The output_datagram's seq accessor method returns 0xfe
  // The value returned by the output_datagram's length accessor method is 8
  // The payload buffer returned by the output_datagram's payload accessor method is '0xff 0x06 0xcd 0x6a 0xc2 0x7f 0xa1 0x5b'  

    WHEN("transform is called on two parseable datagram bodies, whose headers have sequence numbers as 0xff & 0 respectively")
      THEN("The first transform method reports ok status")
      THEN("After the first transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The second transform method reports ok status")
      THEN("After the second transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

    WHEN("transform is called on two parseable datagram bodies, whose headers have sequence numbers as 0xff & 1 respectively")      
      THEN("The first transform method reports ok status")
      THEN("After the first transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

      THEN("The second transform method reports invalid_sequence status")
      THEN("After the second transform method is called, the value returned by the output_datagram's seq accessor method is equal to the sequence field of the input_buffer body's header")
      THEN("The paylaod returned by the output_datagram's paylaod accessor method is equal to the paylaod from the input_buffer body")

/* Datagram sender

Scenario: Datagram Sender correctly generates datagram bodies from payloads
  GIVEN("A Datagram sender of buffer size 254 bytes with next sequence equal to 0")
    WHEN("A non empty payload buffer is given to the datagram sender")
      THEN("The transform method reports ok status")
      THEN("The seq field of the body's header is equal to 0x00")
      THEN("The length field of the body's header is equal to the size of the payload buffer given")
      THEN("The body's payload section correctly stores the paylaod as '0xf9 0x23 0x4a 0xd4 0xe0'")
      THEN("The output datagram is as expected '0x00 0x05 0xf9 0x23 0x4a 0xd4 0xe0'")

    WHEN("The input payload to the datagram sender is '0x00 0x00'")
      THEN("The transform method reports ok status")
      THEN("The output datagram is as expected '\x00\x02\x00\x00' ")      

Scenario: Datagram Sender correctly reports incrementing and rollover of expected sequence number
    
  GIVEN("A Datagram sender of buffer size 254 bytes with next sequence equal to 0x01")
    WHEN("2 non-empty payload buffers of capacity 254 bytes is given to the sender")
      THEN("The first transform method reports ok status")      
      THEN("The seq field of the body's header is equal to 0x01")
      THEN("The length field of the body's header is equal to the size of the payload given")        
      THEN("The body's payload section correctly stores the paylaod as '0x88 0xf3 0x52 0xec 0x5c 0x31'") {
      THEN("The output datagram is as expected '0x01 0x06 0x88 0xf3 0x52 0xec 0x5c 0x31' ") {

      THEN("The second transform method reports ok status")      
      THEN("The seq field of the body's header is equal to 0x02")
      THEN("The length field of the body's header is equal to the size of the payload given")        
      THEN("The body's payload section correctly stores the paylaod as '0x1d 0xf5 0x2a 0xbc 0x97 0x2c'") {
      THEN("The output datagram is as expected '0x02 0x06 0x1d 0xf5 0x2a 0xbc 0x97 0x2c' ") {

  GIVEN("A Datagram sender of buffer size 254 bytes with next sequence equal to 0x00")
    WHEN("2 non-empty payload buffers of capacity 254 bytes is given to the sender")
      THEN("The first transform method reports ok status")      
      THEN("The seq field of the body's header is equal to 0x00")
      THEN("The length field of the body's header is equal to the size of the payload given")        
      THEN("The body's payload section correctly stores the paylaod as '0xc0 0x18 0x65 0xd1 0x03 0x5c'")
      THEN("The output datagram is as expected '0x00 0x06 0xc0 0x18 0x65 0xd1 0x03 0x5c' ")

      THEN("The second transform method reports ok status")      
      THEN("The seq field of the body's header is equal to 0x01")
      THEN("The length field of the body's header is equal to the size of the payload given")        
      THEN("The body's payload section correctly stores the paylaod as '0x6b 0x05 0xb9 0xf3 0xe5 0xb6'")
      THEN("The output datagram is as expected '0x01 0x06 0x6b 0x05 0xb9 0xf3 0xe5 0xb6' ")

  GIVEN("A Datagram sender of buffer size 254 bytes with next sequence equal to 0xff")
    
    WHEN("2 non-empty payload buffers of capacity 254 bytes is given to the sender")
      THEN("The first transform method reports ok status")      
      THEN("The seq field of the body's header is equal to 0xff")
      THEN("The length field of the body's header is equal to the size of the payload given")        
      THEN("The body's payload section correctly stores the paylaod as '0xa0 0x47 0x65 0x6b 0x20 0xe9'")
      THEN("The output datagram is as expected '0xff 0x06 0xa0 0x47 0x65 0x6b 0x20 0xe9' ")

      THEN("The second transform method reports ok status")      
      THEN("The seq field of the body's header is equal to 0x00")
      THEN("The length field of the body's header is equal to the size of the payload given")        
      THEN("The body's payload section correctly stores the paylaod as '0x51 0xb5 0x55 0x69 0x8f 0x67'")
      THEN("The output datagram is as expected '0x00 0x06 0x51 0xb5 0x55 0x69 0x8f 0x67' ")