/* compute_body_crc
Scenario: CRCElement: The compute_body_crc method correctly computes the CRC of a payload from a CRCElement body given as input
  GIVEN("The CRCElement::compute_body_crc static method")
 
    WHEN("The compute_body_crc is called on an input_buffer body with an empty payload")
      THEN("the computed CRC is '0x00000000'")

    WHEN("the compute_body_crc is called on an input_buffer body with payload '123456789'")
      THEN("the computed crc is '0xe3069283'")

    WHEN("the compute_body_crc is called on an input_buffer body with payload '0x00' ")
      THEN("the computed crc is '0x527d5351'")

    WHEN("the compute_body_crc is called on an input_buffer body with payload '0x01' ")
      THEN("the computed crc is '0xa016d052'")

/* write function
Scenario: ConstructedCRCElement: The write method correctly generates a body from the payload given in the constructor
  GIVEN("A crc element constructed with a non-empty payload buffer with a capacity of 254 bytes")
    // assertions carried out in GIVEN:
    // The crc accessor method returns 0  
    // The payload buffer returned by the payload accessor method is '0x01, 0x02, 0x05'

    WHEN("The crc and payload are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, the crc accessor method returns a value equal to the result of directly computing a CRC on the payload.")
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section correctly stores the payload as 0x01 0x02 0x05")
      THEN("The output buffer is as expected")

  GIVEN("A crc element constructed with an empty payload")
    // assertions carried out in GIVEN:
    // The crc accessor method returns 0
    // The payload buffer returned by the payload accessor method is empty

    WHEN("The crc and payload are written to the output buffer")
      THEN("The write method reports ok status")
      THEN("After the write method is called, the crc accessor method returns 0")      
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section is empty")
      THEN("The output buffer is as expected")

/* parse function
Scenario: CRCElement: The parse method correctly updates its internal crc value and the constructor's payload buffer from the input buffer
  
  GIVEN("A CRCElement constructed with an empty payload buffer with a capacity of 254 bytes")
    // assertions carried out in GIVEN:
    // The crc accessor method returns 0
    // The payload buffer returned by the payload accessor method is empty

    WHEN("A body without a complete 4-byte header is parsed")
      THEN("the parse method reports out of bounds status")
      THEN("After the parse method is called, The value returned by the crc accessor method remains unchanged")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is parsed")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor") 
      THEN("the payload given in the CRCElement constructor is independent of the input buffer body")

    WHEN("A body with a complete 4-byte header, and a payload inconsistent with the CRC field of the header, is parsed")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("the value returned by the crc accessor method is inconsistent with the payload")
      THEN("the payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor")
      THEN("the payload given in the CRCElement constructor is independent of the input buffer body")

  GIVEN("A CRCElement constructed with a non-empty payload buffer of capacity 254 bytes")
    // assertions carried out in GIVEN:
    // The crc accessor method returns 0
    // The payload buffer returned by the payload accessor method is '0x12 0x13 0x14 0x15 0x16'

    WHEN("A body without a complete 4-byte header is parsed")
      THEN("the parse method reports out of bounds status")
      THEN("After the parse method is called, the value returned by the crc accessor method remains unchanged")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor")
      THEN("the payload given in the CRCElement constructor is independent of the input buffer body")      
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is parsed")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor")
      THEN("the payload given in the CRCElement constructor is independent of the input buffer body")

  GIVEN("A CRCElement constructed with a non-empty payload buffer of capacity 254 bytes, and a non-zero crc member")
    // assertions carried out in GIVEN:
    // The crc accessor method returns 0x34CD15AD
    // The payload buffer returned by the payload accessor method is '0x0d 0xf0 0x07 0xc3 0xac'

    WHEN("A body without a complete 4-byte header is parsed")
      THEN("the parse method reports out of bounds status")
      THEN("After the parse method is called, The value returned by the crc accessor method remains unchanged")
      THEN("the constructor's payload buffer remains unchanged")   

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is parsed")
      THEN("the parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the input_buffer body")
      THEN("the payload accessor method returns a reference to the payload buffer given in the CRCElement constructor")
      THEN("the payload given in the CRCElement constructor is independent of the input buffer body") 

/* write parse roundtrip
Scenario: CRCElement correctly preserves data in roundtrip writing and parsing

  GIVEN("A CRC Element constructed with a non empty payload buffer with a capacity of 254 bytes")

    WHEN("A body with CRC and payload is generated, parsed into a new ParsedCRCElement object, and generated again with a new ConstructedCRCElement object")
      # write  
      THEN("the crc accessor method returns 0 before the first write method is called")
      THEN("The first write method call returns ok status")
      THEN("After the first write method is called, the crc accessor method returns a value equal to the result of directly computing a CRC on the payload.")
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section correctly stores the payload as '0x01 0x05 0x01 0x02 0x03 0x04 0x05'")
      THEN("The output buffer is as expected")
      # parse
      THEN("The parse method reports ok status")
      THEN("After the parse method is called, the value returned by the crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("the payload returned from the payload accessor method is equal to the payload from the body")
      THEN("the payload given in the ParsedCRCElement constructor is independent of the input_buffer body")
      # write  
      THEN("The second write method call returns ok status")
      THEN("After the second write method is called, the crc accessor method returns a value equal to the result of directly computing a CRC on the payload.")
      THEN("The CRC field of the body's header matches the value returned by the crc accessor method.")
      THEN("The body's payload section correctly stores the payload as '0x01 0x05 0x01 0x02 0x03 0x04 0x05'")
      THEN("The output buffer is as expected")

/* CRCElementReceiver
Scenario: CRCElementReceiver correctly parses CRCElement bodies and performs consistency checking on them

  GIVEN("A CRC element receiver of capacity 254 bytes and an output_crcelement constructed with an empty payload buffer")
    // assertions carried out in GIVEN:
    // The output_crcelement's crc accessor method returns 0
    // The payload buffer returned by the output_crcelement's payload accessor method is empty

    WHEN("An empty input_buffer is given to the crc element receiver")
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method remains unchanged")
      THEN("The output_crcelement's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with less than 4 bytes is given to the crc element receiver")
      // body of length 1,2,3 bytes is passed, passing 4 bytes will give a invalid_crc error instead
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method remains unchanged")
      THEN("The output_crcelement's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")      

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports ok status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("The payload buffer returned by the output_crcelement's payload accessor method is equal to the payload from the input_buffer body")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")

    WHEN("A body with a complete 4-byte header, and a payload inconsistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports invalid crc status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("the value returned by the crc accessor method is inconsistent with the payload")
      THEN("The payload buffer returned by the output_crcelement's payload accessor method is equal to the payload from the input_buffer body")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")

  GIVEN("A CRC element receiver of capacity 254 bytes and an output_crcelement constructed with an non-empty payload buffer")
    // assertions carried out in GIVEN:
    // The output_crcelement's crc accessor method returns 0
    // The payload buffer returned by the output_crcelement's payload accessor method is '0x1e 0xe2 0x9a 0xf8 0x4f'

    WHEN("An empty input_buffer is given to the crc element receiver")
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method remains unchanged")
      THEN("The output_crcelement's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports ok status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("The payload buffer returned by the output_crcelement's payload accessor method is equal to the payload from the input_buffer body")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")

  GIVEN("A CRC element receiver of capacity 254 bytes, and output_crcelement constructed with an non-empty payload buffer and non-zero crc member")
    // assertions carried out in GIVEN:
    // The value returned by the output_crcelement's crc accessor method is '0x40D06D79'
    // The payload buffer returned by the output_crcelement's payload accessor method is '0x23 0x84 0xf5 0x6a 0xac 0xae'

    WHEN("An empty input_buffer is given to the crc element receiver")
      THEN("the transform method reports invalid parse status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method remains unchanged")
      THEN("The output_crcelement's payload accessor method returns a reference to the payload given in its constructor")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")
      THEN("the constructor's payload buffer remains unchanged")

    WHEN("A body with a complete 4-byte header, and a payload consistent with the CRC field of the header, is given to the receiver")
      THEN("the transform method reports ok status")
      THEN("After the transform method is called, the value returned by the output_crcelement's crc accessor method is equal to the crc field of the input_buffer body's header")
      THEN("The payload buffer returned by the output_crcelement's payload accessor method is equal to the payload from the input_buffer body")
      THEN("The data in the output_crcelement's payload buffer is independent of the data in input_buffer")      

/* CRCElementSender
Scenario: CRCElementSender: correctly generates CRCElement bodies from payloads

  GIVEN("A CRC element sender of capacity 254 bytes")

    WHEN("A payload is given along with a sufficiently large output buffer")
      THEN("the transform method reports ok status")
      THEN("output buffer is as expected, equal to (crc + input_buffer)")
      THEN("The CRC field of the output buffer's header is consistent with the input_payload.")
      THEN("The contents of the output buffer remains unchanged")
