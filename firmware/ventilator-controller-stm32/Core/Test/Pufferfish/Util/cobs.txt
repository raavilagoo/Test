Scenario: The Util encode_cobs function correctly encodes buffers

  GIVEN("The Util COBS::encode function")

  WHEN("The encoded byte vector is too small to hold the encoded data")
    THEN("The encode_cobs function reports out_of_bounds status")
    THEN("The encoded buffer is empty")

  WHEN("The cobs::encode is called on a null byte")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x01\x01' ")

  WHEN("The cobs::encode is called on a buffer that contains these bytes '0x00 0x00'")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x01\x01\x01' ")

  WHEN("The cobs::encode function is called on a buffer that contains these bytes '0x11 0x22 0x00 0x33'")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x03\x11\x22\x02\x33'")

  WHEN("The cobs::encode function is called on a buffer that contains these bytes '0x11 0x22 0x00 0x33' and a output_buffer partially filled with 2-bytes is passed")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x03\x11\x22\x02\x33'")

  WHEN("The cobs::encode function is called on a buffer that contains these bytes '\x74\x27\xab\xfb' and a output_buffer partially filled with 10-bytes is passed")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x05\x74\x27\xab\xfb'")      

  WHEN("The cobs::encode function is called on a buffer that contains these bytes '\x11\x22\x33\x44'")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x05\x11\x22\x33\x44'")

  WHEN("The cobs::encode function is called on the char 'x'")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\02x'")
  
  WHEN("The cobs::encode function is called on the char 'xy'")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\03xy'")

  WHEN("The cobs::encode function is called on the string 'Hello world'")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x0cHello World'")

  WHEN("The cobs::encode function is called on a sensor measurements message payload")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected")

  WHEN("The cobs::encode is called on a buffer that contains these bytes '0x6e 0xd7 0xf1 0x00 0xf7 0xab' ")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer is as expected '\x04\x6e\xd7\xf1\x03\xf7\xab' ")

  WHEN("The cobs::encode is called on a 253 byte buffer")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer has an expected sequence of 254 bytes with first byte as 0xfe")

  WHEN("The cobs::encode is called on a 254 bytes buffer with last byte as a null byte")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer has an expected sequence of 254 bytes with first byte as 0xfd")

  WHEN("The cobs::encode is called on a 254 byte buffer with no null bytes")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer has an expected sequence of 254 bytes with first byte as 0xff")

  WHEN("The cobs::encode is called on a 255 byte buffer with no null bytes")
    THEN("The encode_cobs function reports ok status")
    THEN("The encoded buffer has an expected sequence of 257 bytes with first byte as 0xff")

Scenario: The cobs::decode function correctly decodes encoded buffers

 GIVEN("The Util COBS::decode function")

  WHEN("The COBS::decode function is called on a buffer containing '0x01' as the only byte")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is empty")    

  WHEN("The COBS::decode function is called on a buffer containing '0x03' as the only byte")      
    THEN("The decode_cobs function reports out_of_bounds status")
    THEN("The decoded buffer is empty")
     
  WHEN("The COBS::decode function is called on a buffer that contains these bytes '0x05 0x02 0x03' ")    
    THEN("The decode_cobs function reports out_of_bounds status")
    THEN("The decoded buffer is empty")

  WHEN("The COBS::decode function is called on a buffer that contains these bytes '0x05 0x02 0xff' ")    
    THEN("The decode_cobs function reports out_of_bounds status")
    THEN("The decoded buffer is empty")

  WHEN("The COBS::decode function is called on a buffer that contains these bytes '0x02 0x02 0xff' ")    
    THEN("The decode_cobs function reports out_of_bounds status")

  WHEN("The decoded buffer is too small to hold the decoded data")
    THEN("The decode_cobs function reports out_of_bounds status")
    THEN("The decoded buffer is empty")

  WHEN("The COBS::decode function is called on a 257-byte buffer filled with the manual encoding of a 255 non-null-byte payload with a bad null header byte at the 255th byte position")
    THEN("The decode_cobs function reports out_of_bounds status")
    THEN("The decoded buffer has expected sequence of 255 bytes with \x02 at the end")

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x01\x01'")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected '0x00'")

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x01\x01\x01'")    
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected '0x00 0x00'")

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x03\x11\x22\x02\x33'")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected '0x11 0x22 0x00 0x33'")

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x03\x9f\x8c\x01\x03\x21\xe8' and a decoded buffer partially filled with 3-bytes is passed")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected '0x9f 0x8c 0x00 0x00 0x21 0xe8'")

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x05\x11\x22\x33\x44'")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected '\x11\x22\x33\x44'")            

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x02x'")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected 'x' ")

  WHEN("The COBS::decode function is called on a buffer containing these bytes '\x03xy'")    
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected 'xy' ")

  WHEN("The COBS::decode function is called on a buffer containing the bytestring '\x0cHello World'")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected 'Hello World'")

  WHEN("The COBS::decode function is called on a buffer containing a encoded sensor measurements message payload")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected")

  WHEN("The COBS::decode function is called on a buffer that contains these bytes '0x03, 0x9c, 0xb8, 0x03, 0xbe, 0xce'")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer is as expected '\x9c\xb8\x00\xbe\xce' ")

  WHEN("The COBS::decode function is called on a 254-byte buffer filled with the manual encoding of a 253 non-null-byte payload")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer has expected sequence of 253 bytes")

  WHEN("The COBS::decode function is called on a 256-byte buffer filled with the manual encoding of a 254 byte payload with null byte at the end")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer has expected sequence of 254 bytes with last byte as null byte")    

  WHEN("The COBS::decode function is called on a 257-byte buffer filled with the manual encoding of a 255 non-null-byte payload")
    THEN("The decode_cobs function reports ok status")
    THEN("The decoded buffer has expected sequence of 255 bytes as '0xff 0x71 0xcf ......0x02 0xa2 0xd2')
